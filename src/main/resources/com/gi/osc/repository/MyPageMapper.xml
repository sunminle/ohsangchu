<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gi.osc.repository.MyPageMapper">
	<select id="selectUsers" resultType="UsersDTO">
		select * from users where
		realId = #{realId}
	</select>
	
	<select id="selectStoreId">
		select id from store where userid = (select id from users
		where realid = #{realId})
	</select>
	
	<select id="postingCount">
		select count(storeid) from posting where storeid = #{storeId}
	</select>
	
	<select id="storeCount">
		select count(*) from store where userid = #{userId}
	</select>
	
	<select id="selectUsersInfo"
		resultType="com.gi.osc.bean.UserInfoDTO">
		select * from userinfo where userid = #{userId}
	</select>

	<select id="selectStoreInfo"
		resultType="com.gi.osc.bean.StoreDTO">
		select * from store where userid = #{userId}
	</select>

	<select id="selectProductInfo"
		resultType="com.gi.osc.bean.ProductDTO">
		select * from product where id = #{productId}
	</select>
	
	<select id = "selectPostingInfo" resultType="com.gi.osc.bean.PostingDTO">
		select * from posting where id = #{postingId}
	</select>

	<insert id="addPosting"
		parameterType="com.gi.osc.bean.PostingDTO">
		<selectKey keyProperty="id" resultType="int" order="AFTER">
			select posting_seq.currval from dual
		</selectKey>
		insert into posting
		(storeid,title,content,ispublic,categoryid
			<if test="thumnail != null and thumnail != ''">
				,thumnail
			</if>
		)
		values ((select id from store where userid = (select id from users
		where realid = #{realId})),
		#{title},#{content},#{isPublic},#{categoryId}
			<if test="thumnail != null and thumnail != ''">
				,#{thumnail}
			</if>
		)
		
	</insert>


	<select id="nickCheck">
		select count(nickname) from users where nickname =
		#{nickname}
	</select>

	<update id="modifyUsers" parameterType="UsersDTO">
		update users set nickname
		= #{nickname}, profile = #{profile} where realid = #{realId}
	</update>

	<select id="storeNameCheck">
		select count(storename) from store where storename =
		#{storeName}
	</select>

	<update id="modifyStore"
		parameterType="com.gi.osc.bean.StoreDTO">
		update store set storename = #{storeName}, storeintro =
		#{storeIntro} where userid = #{userId}
	</update>
	
	<select id="myReviewCount">
		select count(*) from review where userid = #{userId}
	</select>
	
	<select id="myReview" resultType="com.gi.osc.bean.ReviewDTO">
	<![CDATA[
			select * from (select p.title, a.*, rownum r from posting p ,
			(select * from review where userid = #{userId} order by id desc)a where p.id = a.postingid) where r >= #{start} and r <= #{end}
		]]>
		
	</select>

	<delete id="myReviewDelete">
		delete from review where id = #{reviewNum}
	</delete>
	
	<select id="getReviewCount">
		select count(*) from posting p ,
		(select * from review where postingid in
		(select id
		from posting where storeid =
		(select id from store where userid =
		(select id from users where realid = #{realId})))) a
		where
		p.id=a.postingid 
	</select>
	
	
	<select id="getReview" resultType="com.gi.osc.bean.ReviewDTO">
		<![CDATA[
		select * from (select p.title, a.*, rownum r from posting p ,(select * from review where postingid in
		(select id
		from posting where storeid =
		(select id from store where userid =
		(select id from users where realid = #{realId})))) a
		where
		p.id=a.postingid
		order by a.id desc) where r >= #{start} and r <= #{end}
		]]>
	</select>
	
	<select id="myQNACount">
		select count(*) from qna where userid = #{userId}
	</select>
	
	<select id="myQNA" resultType="com.gi.osc.bean.QNADTO">
		<![CDATA[
		select * from (select q.*, rownum r from 
		(select * from qna where userid = #{userId} order by id desc)q) 
		where r >= #{start} and r <= #{end}
		]]>
	</select>

	

	<select id="myProductBuyer"
		resultType="com.gi.osc.bean.PaymentDTO">
		<choose>
			
			<when test="orderType == 'idDESC'">
				select u.nickname , a.* from users u,
				(select * from payment where postingid = #{postingId}) a
				where u.id = a.userid order by a.id desc
			</when>
			
			<when test="orderType == 'idASC'">
				select u.nickname , a.* from users u,
				(select * from payment where postingid = #{postingId}) a
				where u.id = a.userid order by a.id asc
			</when>

			<when test="orderType == 'status'">
				select u.nickname , a.* from users u,
				(select * from payment where postingid = #{postingId}) a
				where u.id = a.userid order by a.status asc
			</when>

			<when test="orderType == 'paymentType'">
				select u.nickname , a.* from users u,
				(select * from payment where postingid = #{postingId}) a
				where u.id = a.userid order by a.paymenttype asc
			</when>
		</choose>
	</select>
	
	<insert id="addPostingImg">
		insert into posting_img (storeid,postingid,img_url) values (#{storeId},#{postingId},#{imgUrl})
	</insert>
	
	<select id="storeId">
		select id from store where userid = (select id from users
		where realid = #{realId})
	</select>
	
	<select id="myBuyListCount">
		select count(*) from posting p join payment pm on p.id = pm.postingid join users u on pm.userid = u.id where u.realid = #{realId}
	</select>
	
	<select id="myBuyList" resultType="com.gi.osc.bean.PostingDTO">
		<![CDATA[
		select * from (select a.*, rownum r from 
		(select p.*,pm.orderdate from 
		posting p join payment pm on p.id = pm.postingid join users u on pm.userid = u.id 
		where u.realid = #{realId} order by pm.id desc)a) where r >= #{start} and r <= #{end}
		]]>
	</select>
	
	<select id="myHeartListCount">
		select count(*) from posting p join heart h on p.id=h.postingid join users u on h.userid = u.id where u.realid = #{realId} order by h.id desc
	</select>
	
	<select id="myHeartList" resultType="com.gi.osc.bean.PostingDTO">
		<![CDATA[
		select * from 
		(select a.*, rownum r from 
		(select p.*,h.id heartid from posting p join heart h on p.id=h.postingid join users u on h.userid = u.id 
		where u.realid = #{realId} order by h.id desc)a) where r >= #{start} and r <= #{end}
		]]>
	</select>
	
	<select id="mySubscribeListCount">
		select count(*) from store s join store_subscribe ss on ss.storeid = s.id join users u on ss.userid = u.id where u.realid = #{realId} order by ss.id desc
	</select>
	
	<select id="mySubscribeList" resultType="com.gi.osc.bean.StoreDTO">
		<![CDATA[
		select * from 
		(select a.*, rownum r from 
		(select s.* from store s join store_subscribe ss on ss.storeid = s.id join users u on ss.userid = u.id 
		where u.realid = #{realId} order by ss.id desc)a) where r >= #{start} and r <= #{end}
		]]>
	</select>
	
	<select id = "product" resultType="com.gi.osc.bean.ProductDTO">
		select * from product where id = #{productId}
	</select>
	
	<select id="postingList" resultType="com.gi.osc.bean.PostingDTO">
		<![CDATA[
			select * from (select p.*, rownum r from (select * from posting where storeid = (select id from store where userid = 
			(select id from users where realid = #{realId}))order by id desc)p) where r >= #{start} and r <= #{end}
		]]>
	</select>
	
	<insert id="addproduct" parameterType="com.gi.osc.bean.ProductDTO">
		insert into product (storeid,productname,price,quantity,postingid) values ((select id from store where userid = (select id from users
		where realid = #{realId})),#{productName},#{price},#{quantity},#{postingId})
	</insert>
	
	<select id="hashtagChk">
		select count(*) from hashtag where hashtagName = #{hashtagName}
	</select>
	
	<insert id="addHashtag" parameterType="com.gi.osc.bean.HashtagDTO">
		<selectKey keyProperty="id" resultType="int" order="AFTER">
			select hashtag_seq.currval from dual
		</selectKey>
		insert into hashtag (hashtagName) values (#{hashtagName})
	</insert>
	
	<insert id="addHashtagPosting" parameterType="com.gi.osc.bean.HashtagPostingDTO">
		insert into hashtag_posting (hashtagid,postingid) values (#{hashtagId},#{postingId})
	</insert>
	
	<select id="selectHashtagId">
		select id from hashtag where hashtagName = #{hashtagName}
	</select>
	
	<insert id="addStore">
		insert into store (userid,storename,storeintro) values(#{userId},#{storeName},#{storeIntro})
	</insert>
	
	
	
	
</mapper>